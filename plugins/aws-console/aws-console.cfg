[DEFAULT]
plugin_id = 9802

[config]
type=detector
enable=yes
source=log
location=/var/log/aws-console.log
create_file=true
process=
start=no
stop=no

[0001 - AttachLoadBalancers]
event_type = event
precheck = "AttachLoadBalancers"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AttachLoadBalancers)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 1
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0002 - DetachLoadBalancers]
event_type = event
precheck = "DetachLoadBalancers"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DetachLoadBalancers)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 2
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0003 - PutScalingPolicy]
event_type = event
precheck = "PutScalingPolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutScalingPolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 3
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0004 - DeletePolicy]
event_type = event
precheck = "DeletePolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeletePolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 4
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0005 - TerminateInstanceInAutoScalingGroup]
event_type = event
precheck = "TerminateInstanceInAutoScalingGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>TerminateInstanceInAutoScalingGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 5
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0006 - CancelUpdateStack]
event_type = event
precheck = "CancelUpdateStack"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CancelUpdateStack)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 6
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0007 - CreateStack]
event_type = event
precheck = "CreateStack"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateStack)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 7
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0008 - DeleteStack]
event_type = event
precheck = "DeleteStack"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteStack)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 8
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0009 - UpdateStack]
event_type = event
precheck = "UpdateStack"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateStack)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 9
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0010 - DeleteCertificate]
event_type = event
precheck = "DeleteCertificate"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteCertificate)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 10
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0011 - RequestCertificate]
event_type = event
precheck = "RequestCertificate"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RequestCertificate)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 11
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0012 - ResendValidationEmail]
event_type = event
precheck = "ResendValidationEmail"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ResendValidationEmail)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 12
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0013 - StopLogging]
event_type = event
precheck = "StopLogging"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>StopLogging)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 13
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0014 - DeleteConfigRule]
event_type = event
precheck = "DeleteConfigRule"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteConfigRule)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 14
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0015 - DeleteConfigurationRecorder]
event_type = event
precheck = "DeleteConfigurationRecorder"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteConfigurationRecorder)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 15
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0016 - DeleteDeliveryChannel]
event_type = event
precheck = "DeleteDeliveryChannel"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteDeliveryChannel)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 16
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0017 - DeleteEvaluationResults]
event_type = event
precheck = "DeleteEvaluationResults"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteEvaluationResults)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 17
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0018 - PutConfigurationRecorder]
event_type = event
precheck = "PutConfigurationRecorder"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutConfigurationRecorder)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 18
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0019 - PutConfigRule]
event_type = event
precheck = "PutConfigRule"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutConfigRule)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 19
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0020 - PutDeliveryChannel]
event_type = event
precheck = "PutDeliveryChannel"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutDeliveryChannel)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 20
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0021 - PutEvaluations]
event_type = event
precheck = "PutEvaluations"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutEvaluations)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 21
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0022 - StartConfigRulesEvaluation]
event_type = event
precheck = "StartConfigRulesEvaluation"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>StartConfigRulesEvaluation)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 22
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0023 - StartConfigurationRecorder]
event_type = event
precheck = "StartConfigurationRecorder"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>StartConfigurationRecorder)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 23
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0024 - StopConfigurationRecorder]
event_type = event
precheck = "StopConfigurationRecorder"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>StopConfigurationRecorder)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 24
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0025 - AllocateHostedConnection]
event_type = event
precheck = "AllocateHostedConnection"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AllocateHostedConnection)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 25
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0026 - AllocatePrivateVirtualInterface]
event_type = event
precheck = "AllocatePrivateVirtualInterface"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AllocatePrivateVirtualInterface)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 26
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0027 - AllocatePublicVirtualInterface]
event_type = event
precheck = "AllocatePublicVirtualInterface"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AllocatePublicVirtualInterface)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 27
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0028 - AssociateConnectionWithLag]
event_type = event
precheck = "AssociateConnectionWithLag"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AssociateConnectionWithLag)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 28
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0029 - AssociateHostedConnection]
event_type = event
precheck = "AssociateHostedConnection"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AssociateHostedConnection)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 29
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0030 - AssociateVirtualInterface]
event_type = event
precheck = "AssociateVirtualInterface"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AssociateVirtualInterface)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 30
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0031 - ConfirmConnection]
event_type = event
precheck = "ConfirmConnection"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ConfirmConnection)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 31
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0032 - ConfirmPrivateVirtualInterface]
event_type = event
precheck = "ConfirmPrivateVirtualInterface"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ConfirmPrivateVirtualInterface)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 32
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0033 - ConfirmPublicVirtualInterface]
event_type = event
precheck = "ConfirmPublicVirtualInterface"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ConfirmPublicVirtualInterface)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 33
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0034 - CreateConnection]
event_type = event
precheck = "CreateConnection"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateConnection)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 34
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0035 - CreateInterconnect]
event_type = event
precheck = "CreateInterconnect"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateInterconnect)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 35
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0036 - CreateLag]
event_type = event
precheck = "CreateLag"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateLag)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 36
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0037 - CreatePrivateVirtualInterface]
event_type = event
precheck = "CreatePrivateVirtualInterface"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreatePrivateVirtualInterface)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 37
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0038 - CreatePublicVirtualInterface]
event_type = event
precheck = "CreatePublicVirtualInterface"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreatePublicVirtualInterface)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 38
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0039 - DeleteConnection]
event_type = event
precheck = "DeleteConnection"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteConnection)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 39
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0040 - DeleteInterconnect]
event_type = event
precheck = "DeleteInterconnect"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteInterconnect)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 40
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0041 - DeleteLag]
event_type = event
precheck = "DeleteLag"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteLag)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 41
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0042 - DeleteVirtualInterface]
event_type = event
precheck = "DeleteVirtualInterface"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteVirtualInterface)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 42
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0043 - DisassociateConnectionFromLag]
event_type = event
precheck = "DisassociateConnectionFromLag"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DisassociateConnectionFromLag)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 43
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0044 - UpdateLag]
event_type = event
precheck = "UpdateLag"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateLag)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 44
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0045 - RunInstances]
event_type = event
precheck = "RunInstances"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RunInstances)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 45
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0046 - StartInstances]
event_type = event
precheck = "StartInstances"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>StartInstances)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 46
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0047 - StopInstances]
event_type = event
precheck = "StopInstances"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>StopInstances)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 47
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0048 - TerminateInstances]
event_type = event
precheck = "TerminateInstances"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>TerminateInstances)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 48
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0049 - SendSSHPublicKey]
event_type = event
precheck = "SendSSHPublicKey"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>SendSSHPublicKey)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 49
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0050 - AssociateIamInstanceProfile]
event_type = event
precheck = "AssociateIamInstanceProfile"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AssociateIamInstanceProfile)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 50
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0051 - AssociateAddress]
event_type = event
precheck = "AssociateAddress"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AssociateAddress)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 51
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0052 - AssociateRouteTable]
event_type = event
precheck = "AssociateRouteTable"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AssociateRouteTable)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 52
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0053 - AssociateSubnetCidrBlock]
event_type = event
precheck = "AssociateSubnetCidrBlock"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AssociateSubnetCidrBlock)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 53
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0054 - AssociateVpcCidrBlock]
event_type = event
precheck = "AssociateVpcCidrBlock"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AssociateVpcCidrBlock)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 54
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0055 - AttachClassicLinkVpc]
event_type = event
precheck = "AttachClassicLinkVpc"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AttachClassicLinkVpc)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 55
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0056 - AttachInternetGateway]
event_type = event
precheck = "AttachInternetGateway"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AttachInternetGateway)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 56
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0057 - AttachNetworkInterface]
event_type = event
precheck = "AttachNetworkInterface"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AttachNetworkInterface)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 57
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0058 - AllocateAddress]
event_type = event
precheck = "AllocateAddress"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AllocateAddress)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 58
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0059 - AssignPrivateIpAddresses]
event_type = event
precheck = "AssignPrivateIpAddresses"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AssignPrivateIpAddresses)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 59
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0060 - AttachVpnGateway]
event_type = event
precheck = "AttachVpnGateway"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AttachVpnGateway)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 60
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0061 - CreateNatGateway]
event_type = event
precheck = "CreateNatGateway"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateNatGateway)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 61
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0062 - CreateKeyPair]
event_type = event
precheck = "CreateKeyPair"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateKeyPair)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 62
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0063 - CreateNetworkAcl]
event_type = event
precheck = "CreateNetworkAcl"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateNetworkAcl)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 63
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0064 - CreateNetworkAclEntry]
event_type = event
precheck = "CreateNetworkAclEntry"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateNetworkAclEntry)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 64
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0065 - CreateNetworkInterface]
event_type = event
precheck = "CreateNetworkInterface"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateNetworkInterface)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 65
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0066 - CreateRoute]
event_type = event
precheck = "CreateRoute"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateRoute)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 66
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0067 - CreateRouteTable]
event_type = event
precheck = "CreateRouteTable"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateRouteTable)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 67
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0068 - CreateSecurityGroup]
event_type = event
precheck = "CreateSecurityGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateSecurityGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 68
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0069 - CreateVpc]
event_type = event
precheck = "CreateVpc"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateVpc)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 69
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0070 - CreateVpcEndpoint]
event_type = event
precheck = "CreateVpcEndpoint"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateVpcEndpoint)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 70
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0071 - CreateVpcPeeringConnection]
event_type = event
precheck = "CreateVpcPeeringConnection"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateVpcPeeringConnection)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 71
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0072 - CreateVpnConnection]
event_type = event
precheck = "CreateVpnConnection"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateVpnConnection)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 72
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0073 - CreateVpnConnectionRoute]
event_type = event
precheck = "CreateVpnConnectionRoute"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateVpnConnectionRoute)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 73
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0074 - CreateVpnGateway]
event_type = event
precheck = "CreateVpnGateway"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateVpnGateway)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 74
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0075 - DeleteCustomerGateway]
event_type = event
precheck = "DeleteCustomerGateway"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteCustomerGateway)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 75
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0076 - DeleteDhcpOptions]
event_type = event
precheck = "DeleteDhcpOptions"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteDhcpOptions)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 76
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0077 - DeleteEgressOnlyInternetGateway]
event_type = event
precheck = "DeleteEgressOnlyInternetGateway"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteEgressOnlyInternetGateway)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 77
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0078 - DeleteInternetGateway]
event_type = event
precheck = "DeleteInternetGateway"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteInternetGateway)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 78
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0079 - DeleteKeyPair]
event_type = event
precheck = "DeleteKeyPair"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteKeyPair)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 79
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0080 - DeleteNatGateway]
event_type = event
precheck = "DeleteNatGateway"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteNatGateway)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 80
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0081 - DeleteNetworkAcl]
event_type = event
precheck = "DeleteNetworkAcl"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteNetworkAcl)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 81
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0082 - DeleteNetworkAclEntry]
event_type = event
precheck = "DeleteNetworkAclEntry"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteNetworkAclEntry)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 82
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0083 - DeleteNetworkInterface]
event_type = event
precheck = "DeleteNetworkInterface"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteNetworkInterface)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 83
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0084 - DeleteRoute]
event_type = event
precheck = "DeleteRoute"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteRoute)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 84
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0085 - DeleteRouteTable]
event_type = event
precheck = "DeleteRouteTable"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteRouteTable)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 85
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0086 - DeleteSecurityGroup]
event_type = event
precheck = "DeleteSecurityGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteSecurityGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 86
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0087 - DeleteVpcEndpoints]
event_type = event
precheck = "DeleteVpcEndpoints"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteVpcEndpoints)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 87
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0088 - DeleteVpcPeeringConnection]
event_type = event
precheck = "DeleteVpcPeeringConnection"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteVpcPeeringConnection)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 88
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0089 - DeleteVpnConnection]
event_type = event
precheck = "DeleteVpnConnection"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteVpnConnection)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 89
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0090 - DeleteVpnConnectionRoute]
event_type = event
precheck = "DeleteVpnConnectionRoute"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteVpnConnectionRoute)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 90
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0091 - DeleteVpnGateway]
event_type = event
precheck = "DeleteVpnGateway"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteVpnGateway)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 91
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0092 - DetachClassicLinkVpc]
event_type = event
precheck = "DetachClassicLinkVpc"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DetachClassicLinkVpc)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 92
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0093 - DetachInternetGateway]
event_type = event
precheck = "DetachInternetGateway"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DetachInternetGateway)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 93
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0094 - DetachNetworkInterface]
event_type = event
precheck = "DetachNetworkInterface"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DetachNetworkInterface)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 94
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0095 - DetachVolume]
event_type = event
precheck = "DetachVolume"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DetachVolume)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 95
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0096 - DetachVpnGateway]
event_type = event
precheck = "DetachVpnGateway"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DetachVpnGateway)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 96
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0097 - DisableVgwRoutePropagation]
event_type = event
precheck = "DisableVgwRoutePropagation"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DisableVgwRoutePropagation)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 97
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0098 - DisableVpcClassicLink]
event_type = event
precheck = "DisableVpcClassicLink"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DisableVpcClassicLink)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 98
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0099 - DisassociateAddress]
event_type = event
precheck = "DisassociateAddress"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DisassociateAddress)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 99
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0100 - DisassociateIamInstanceProfile]
event_type = event
precheck = "DisassociateIamInstanceProfile"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DisassociateIamInstanceProfile)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 100
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0101 - DisassociateRouteTable]
event_type = event
precheck = "DisassociateRouteTable"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DisassociateRouteTable)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 101
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0102 - DisassociateSubnetCidrBlock]
event_type = event
precheck = "DisassociateSubnetCidrBlock"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DisassociateSubnetCidrBlock)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 102
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0103 - DisassociateVpcCidrBlock]
event_type = event
precheck = "DisassociateVpcCidrBlock"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DisassociateVpcCidrBlock)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 103
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0104 - EnableVgwRoutePropagation]
event_type = event
precheck = "EnableVgwRoutePropagation"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>EnableVgwRoutePropagation)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 104
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0105 - EnableVolumeIO]
event_type = event
precheck = "EnableVolumeIO"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>EnableVolumeIO)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 105
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0106 - EnableVpcClassicLink]
event_type = event
precheck = "EnableVpcClassicLink"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>EnableVpcClassicLink)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 106
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0107 - ReplaceNetworkAclEntry]
event_type = event
precheck = "ReplaceNetworkAclEntry"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ReplaceNetworkAclEntry)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 107
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0108 - ReplaceNetworkAclAssociation]
event_type = event
precheck = "ReplaceNetworkAclAssociation"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ReplaceNetworkAclAssociation)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 108
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0109 - AuthorizeSecurityGroupEgress]
event_type = event
precheck = "AuthorizeSecurityGroupEgress"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AuthorizeSecurityGroupEgress)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 109
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0110 - AuthorizeSecurityGroupIngress]
event_type = event
precheck = "AuthorizeSecurityGroupIngress"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AuthorizeSecurityGroupIngress)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 110
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0111 - RevokeSecurityGroupEgress]
event_type = event
precheck = "RevokeSecurityGroupEgress"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RevokeSecurityGroupEgress)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 111
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0112 - RevokeSecurityGroupIngress]
event_type = event
precheck = "RevokeSecurityGroupIngress"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RevokeSecurityGroupIngress)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 112
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0113 - CreateFileSystem]
event_type = event
precheck = "CreateFileSystem"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateFileSystem)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 113
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0114 - CreateMountTarget]
event_type = event
precheck = "CreateMountTarget"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateMountTarget)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 114
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0115 - DeleteFileSystem]
event_type = event
precheck = "DeleteFileSystem"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteFileSystem)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 115
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0116 - DeleteMountTarget]
event_type = event
precheck = "DeleteMountTarget"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteMountTarget)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 116
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0117 - ModifyMountTargetSecurityGroups]
event_type = event
precheck = "ModifyMountTargetSecurityGroups"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ModifyMountTargetSecurityGroups)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 117
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0118 - AbortEnvironmentUpdate]
event_type = event
precheck = "AbortEnvironmentUpdate"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AbortEnvironmentUpdate)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 118
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0119 - CreateApplication]
event_type = event
precheck = "CreateApplication"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateApplication)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 119
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0120 - CreateApplicationVersion]
event_type = event
precheck = "CreateApplicationVersion"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateApplicationVersion)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 120
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0121 - CreateConfigurationTemplate]
event_type = event
precheck = "CreateConfigurationTemplate"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateConfigurationTemplate)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 121
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0122 - CreateEnvironment]
event_type = event
precheck = "CreateEnvironment"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateEnvironment)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 122
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0123 - CreateStorageLocation]
event_type = event
precheck = "CreateStorageLocation"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateStorageLocation)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 123
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0124 - DeleteApplication]
event_type = event
precheck = "DeleteApplication"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteApplication)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 124
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0125 - DeleteApplicationVersion]
event_type = event
precheck = "DeleteApplicationVersion"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteApplicationVersion)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 125
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0126 - DeleteConfigurationTemplate]
event_type = event
precheck = "DeleteConfigurationTemplate"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteConfigurationTemplate)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 126
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0127 - DeleteEnvironmentConfiguration]
event_type = event
precheck = "DeleteEnvironmentConfiguration"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteEnvironmentConfiguration)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 127
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0128 - RebuildEnvironment]
event_type = event
precheck = "RebuildEnvironment"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RebuildEnvironment)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 128
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0129 - RestartAppServer]
event_type = event
precheck = "RestartAppServer"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RestartAppServer)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 129
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0130 - SwapEnvironmentCNAMEs]
event_type = event
precheck = "SwapEnvironmentCNAMEs"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>SwapEnvironmentCNAMEs)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 130
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0131 - TerminateEnvironment]
event_type = event
precheck = "TerminateEnvironment"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>TerminateEnvironment)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 131
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0132 - UpdateApplication]
event_type = event
precheck = "UpdateApplication"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateApplication)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 132
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0133 - UpdateApplicationVersion]
event_type = event
precheck = "UpdateApplicationVersion"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateApplicationVersion)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 133
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0134 - UpdateConfigurationTemplate]
event_type = event
precheck = "UpdateConfigurationTemplate"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateConfigurationTemplate)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 134
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0135 - UpdateEnvironment]
event_type = event
precheck = "UpdateEnvironment"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateEnvironment)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 135
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0136 - AuthorizeCacheSecurityGroupIngress]
event_type = event
precheck = "AuthorizeCacheSecurityGroupIngress"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AuthorizeCacheSecurityGroupIngress)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 136
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0137 - CreateCacheSecurityGroup]
event_type = event
precheck = "CreateCacheSecurityGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateCacheSecurityGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 137
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0138 - DeleteCacheSecurityGroup]
event_type = event
precheck = "DeleteCacheSecurityGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteCacheSecurityGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 138
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0139 - RevokeCacheSecurityGroupIngress]
event_type = event
precheck = "RevokeCacheSecurityGroupIngress"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RevokeCacheSecurityGroupIngress)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 139
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0140 - ApplySecurityGroupsToLoadBalancer]
event_type = event
precheck = "ApplySecurityGroupsToLoadBalancer"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ApplySecurityGroupsToLoadBalancer)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 140
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0141 - CreateListener]
event_type = event
precheck = "CreateListener"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateListener)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 141
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0142 - CreateLoadBalancer]
event_type = event
precheck = "CreateLoadBalancer"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateLoadBalancer)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 142
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0143 - CreateLoadBalancerPolicy]
event_type = event
precheck = "CreateLoadBalancerPolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateLoadBalancerPolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 143
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0144 - CreateRule]
event_type = event
precheck = "CreateRule"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateRule)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 144
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0145 - CreateTargetGroup]
event_type = event
precheck = "CreateTargetGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateTargetGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 145
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0146 - DeleteListener]
event_type = event
precheck = "DeleteListener"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteListener)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 146
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0147 - DeleteLoadBalancer]
event_type = event
precheck = "DeleteLoadBalancer"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteLoadBalancer)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 147
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0148 - DeleteLoadBalancerListeners]
event_type = event
precheck = "DeleteLoadBalancerListeners"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteLoadBalancerListeners)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 148
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0149 - DeleteRule]
event_type = event
precheck = "DeleteRule"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteRule)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 149
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0150 - DeleteTargetGroup]
event_type = event
precheck = "DeleteTargetGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteTargetGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 150
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0151 - DeregisterTargets]
event_type = event
precheck = "DeregisterTargets"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeregisterTargets)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 151
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0152 - ModifyListener]
event_type = event
precheck = "ModifyListener"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ModifyListener)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 152
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0153 - ModifyLoadBalancerAttributes]
event_type = event
precheck = "ModifyLoadBalancerAttributes"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ModifyLoadBalancerAttributes)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 153
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0154 - ModifyRule]
event_type = event
precheck = "ModifyRule"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ModifyRule)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 154
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0155 - ModifyTargetGroup]
event_type = event
precheck = "ModifyTargetGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ModifyTargetGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 155
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0156 - ModifyTargetGroupAttributes]
event_type = event
precheck = "ModifyTargetGroupAttributes"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ModifyTargetGroupAttributes)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 156
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0157 - RegisterTargets]
event_type = event
precheck = "RegisterTargets"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RegisterTargets)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 157
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0158 - RemoveTags]
event_type = event
precheck = "RemoveTags"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RemoveTags)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 158
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0159 - SetSecurityGroups]
event_type = event
precheck = "SetSecurityGroups"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>SetSecurityGroups)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 159
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0160 - AuthorizeSnapshotAccess]
event_type = event
precheck = "AuthorizeSnapshotAccess"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AuthorizeSnapshotAccess)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 160
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0161 - RevokeSnapshotAccess]
event_type = event
precheck = "RevokeSnapshotAccess"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RevokeSnapshotAccess)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 161
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0162 - RotateEncryptionKey]
event_type = event
precheck = "RotateEncryptionKey"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RotateEncryptionKey)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 162
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0163 - AuthorizeClusterSecurityGroupIngress]
event_type = event
precheck = "AuthorizeClusterSecurityGroupIngress"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AuthorizeClusterSecurityGroupIngress)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 163
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0164 - CreateClusterSecurityGroup]
event_type = event
precheck = "CreateClusterSecurityGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateClusterSecurityGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 164
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0165 - DeleteClusterSecurityGroup]
event_type = event
precheck = "DeleteClusterSecurityGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteClusterSecurityGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 165
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0166 - RevokeClusterSecurityGroupIngress]
event_type = event
precheck = "RevokeClusterSecurityGroupIngress"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RevokeClusterSecurityGroupIngress)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 166
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0167 - AuthorizeDBSecurityGroupIngress]
event_type = event
precheck = "AuthorizeDBSecurityGroupIngress"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AuthorizeDBSecurityGroupIngress)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 167
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0168 - CreateDBCluster]
event_type = event
precheck = "CreateDBCluster"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateDBCluster)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 168
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0169 - CreateDBClusterParameterGroup]
event_type = event
precheck = "CreateDBClusterParameterGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateDBClusterParameterGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 169
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0170 - CreateDBClusterSnapshot]
event_type = event
precheck = "CreateDBClusterSnapshot"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateDBClusterSnapshot)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 170
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0171 - CreateDBInstance]
event_type = event
precheck = "CreateDBInstance"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateDBInstance)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 171
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0172 - CreateDBInstanceReadReplica]
event_type = event
precheck = "CreateDBInstanceReadReplica"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateDBInstanceReadReplica)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 172
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0173 - CreateDBParameterGroup]
event_type = event
precheck = "CreateDBParameterGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateDBParameterGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 173
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0174 - CreateDBSecurityGroup]
event_type = event
precheck = "CreateDBSecurityGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateDBSecurityGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 174
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0175 - CreateDBSnapshot]
event_type = event
precheck = "CreateDBSnapshot"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateDBSnapshot)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 175
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0176 - CreateDBSubnetGroup]
event_type = event
precheck = "CreateDBSubnetGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateDBSubnetGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 176
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0177 - CreateOptionGroup]
event_type = event
precheck = "CreateOptionGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateOptionGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 177
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0178 - DeleteDBCluster]
event_type = event
precheck = "DeleteDBCluster"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteDBCluster)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 178
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0179 - DeleteDBClusterParameterGroup]
event_type = event
precheck = "DeleteDBClusterParameterGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteDBClusterParameterGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 179
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0180 - DeleteDBClusterSnapshot]
event_type = event
precheck = "DeleteDBClusterSnapshot"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteDBClusterSnapshot)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 180
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0181 - DeleteDBInstance]
event_type = event
precheck = "DeleteDBInstance"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteDBInstance)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 181
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0182 - DeleteDBParameterGroup]
event_type = event
precheck = "DeleteDBParameterGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteDBParameterGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 182
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0183 - DeleteDBSecurityGroup]
event_type = event
precheck = "DeleteDBSecurityGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteDBSecurityGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 183
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0184 - DeleteDBSnapshot]
event_type = event
precheck = "DeleteDBSnapshot"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteDBSnapshot)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 184
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0185 - DeleteDBSubnetGroup]
event_type = event
precheck = "DeleteDBSubnetGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteDBSubnetGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 185
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0186 - DeleteOptionGroup]
event_type = event
precheck = "DeleteOptionGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteOptionGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 186
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0187 - FailoverDBCluster]
event_type = event
precheck = "FailoverDBCluster"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>FailoverDBCluster)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 187
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0188 - ModifyDBCluster]
event_type = event
precheck = "ModifyDBCluster"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ModifyDBCluster)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 188
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0189 - ModifyDBClusterParameterGroup]
event_type = event
precheck = "ModifyDBClusterParameterGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ModifyDBClusterParameterGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 189
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0190 - ModifyDBInstance]
event_type = event
precheck = "ModifyDBInstance"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ModifyDBInstance)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 190
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0191 - ModifyDBParameterGroup]
event_type = event
precheck = "ModifyDBParameterGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ModifyDBParameterGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 191
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0192 - ModifyDBSnapshotAttribute]
event_type = event
precheck = "ModifyDBSnapshotAttribute"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ModifyDBSnapshotAttribute)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 192
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0193 - ModifyDBSubnetGroup]
event_type = event
precheck = "ModifyDBSubnetGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ModifyDBSubnetGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 193
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0194 - ModifyOptionGroup]
event_type = event
precheck = "ModifyOptionGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ModifyOptionGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 194
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0195 - PromoteReadReplica]
event_type = event
precheck = "PromoteReadReplica"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PromoteReadReplica)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 195
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0196 - RebootDBInstance]
event_type = event
precheck = "RebootDBInstance"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RebootDBInstance)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 196
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0197 - ResetDBClusterParameterGroup]
event_type = event
precheck = "ResetDBClusterParameterGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ResetDBClusterParameterGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 197
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0198 - ResetDBParameterGroup]
event_type = event
precheck = "ResetDBParameterGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ResetDBParameterGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 198
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0199 - RestoreDBClusterFromSnapshot]
event_type = event
precheck = "RestoreDBClusterFromSnapshot"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RestoreDBClusterFromSnapshot)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 199
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0200 - RestoreDBClusterToPointInTime]
event_type = event
precheck = "RestoreDBClusterToPointInTime"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RestoreDBClusterToPointInTime)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 200
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0201 - RestoreDBInstanceFromDBSnapshot]
event_type = event
precheck = "RestoreDBInstanceFromDBSnapshot"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RestoreDBInstanceFromDBSnapshot)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 201
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0202 - RestoreDBInstanceToPointInTime]
event_type = event
precheck = "RestoreDBInstanceToPointInTime"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RestoreDBInstanceToPointInTime)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 202
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0203 - RevokeDBSecurityGroupIngress]
event_type = event
precheck = "RevokeDBSecurityGroupIngress"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RevokeDBSecurityGroupIngress)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 203
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0204 - ChangeResourceRecordSets]
event_type = event
precheck = "ChangeResourceRecordSets"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ChangeResourceRecordSets)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 204
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0205 - DeleteHealthCheck]
event_type = event
precheck = "DeleteHealthCheck"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteHealthCheck)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 205
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0206 - CreateBucket]
event_type = event
precheck = "CreateBucket"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateBucket)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 206
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0207 - DeleteBucket]
event_type = event
precheck = "DeleteBucket"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteBucket)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 207
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0208 - DeleteBucketCors]
event_type = event
precheck = "DeleteBucketCors"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteBucketCors)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 208
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0209 - DeleteBucketLifecycle]
event_type = event
precheck = "DeleteBucketLifecycle"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteBucketLifecycle)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 209
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0210 - DeleteBucketPolicy]
event_type = event
precheck = "DeleteBucketPolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteBucketPolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 210
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0211 - DeleteBucketReplication]
event_type = event
precheck = "DeleteBucketReplication"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteBucketReplication)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 211
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0212 - DeleteBucketTagging]
event_type = event
precheck = "DeleteBucketTagging"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteBucketTagging)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 212
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0213 - PutBucketAcl]
event_type = event
precheck = "PutBucketAcl"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutBucketAcl)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 213
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0214 - PutBucketCors]
event_type = event
precheck = "PutBucketCors"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutBucketCors)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 214
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0215 - PutBucketLifecycle]
event_type = event
precheck = "PutBucketLifecycle"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutBucketLifecycle)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 215
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0216 - PutBucketLogging]
event_type = event
precheck = "PutBucketLogging"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutBucketLogging)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 216
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0217 - PutBucketNotification]
event_type = event
precheck = "PutBucketNotification"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutBucketNotification)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 217
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0218 - PutBucketPolicy]
event_type = event
precheck = "PutBucketPolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutBucketPolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 218
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0219 - PutBucketReplication]
event_type = event
precheck = "PutBucketReplication"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutBucketReplication)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 219
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0220 - PutBucketRequestPayment]
event_type = event
precheck = "PutBucketRequestPayment"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutBucketRequestPayment)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 220
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0221 - PutBucketTagging]
event_type = event
precheck = "PutBucketTagging"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutBucketTagging)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 221
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0222 - PutBucketVersioning]
event_type = event
precheck = "PutBucketVersioning"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutBucketVersioning)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 222
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0223 - PutBucketWebsite]
event_type = event
precheck = "PutBucketWebsite"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutBucketWebsite)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 223
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0224 - CreateByteMatchSet]
event_type = event
precheck = "CreateByteMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateByteMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 224
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0225 - CreateGeoMatchSet]
event_type = event
precheck = "CreateGeoMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateGeoMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 225
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0226 - CreateIPSet]
event_type = event
precheck = "CreateIPSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateIPSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 226
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0227 - CreateRateBasedRule]
event_type = event
precheck = "CreateRateBasedRule"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateRateBasedRule)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 227
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0228 - CreateRegexMatchSet]
event_type = event
precheck = "CreateRegexMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateRegexMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 228
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0229 - CreateRegexPatternSet]
event_type = event
precheck = "CreateRegexPatternSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateRegexPatternSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 229
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0230 - CreateRule]
event_type = event
precheck = "CreateRule"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateRule)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 230
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0231 - CreateSizeConstraintSet]
event_type = event
precheck = "CreateSizeConstraintSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateSizeConstraintSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 231
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0232 - CreateSqlInjectionMatchSet]
event_type = event
precheck = "CreateSqlInjectionMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateSqlInjectionMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 232
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0233 - CreateWebACL]
event_type = event
precheck = "CreateWebACL"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateWebACL)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 233
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0234 - CreateXssMatchSet]
event_type = event
precheck = "CreateXssMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateXssMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 234
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0235 - DeleteByteMatchSet]
event_type = event
precheck = "DeleteByteMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteByteMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 235
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0236 - DeleteGeoMatchSet]
event_type = event
precheck = "DeleteGeoMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteGeoMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 236
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0237 - DeleteIPSet]
event_type = event
precheck = "DeleteIPSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteIPSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 237
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0238 - DeleteRateBasedRule]
event_type = event
precheck = "DeleteRateBasedRule"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteRateBasedRule)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 238
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0239 - DeleteRegexMatchSet]
event_type = event
precheck = "DeleteRegexMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteRegexMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 239
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0240 - DeleteRegexPatternSet]
event_type = event
precheck = "DeleteRegexPatternSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteRegexPatternSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 240
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0241 - DeleteRule]
event_type = event
precheck = "DeleteRule"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteRule)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 241
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0242 - DeleteSizeConstraintSet]
event_type = event
precheck = "DeleteSizeConstraintSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteSizeConstraintSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 242
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0243 - DeleteSqlInjectionMatchSet]
event_type = event
precheck = "DeleteSqlInjectionMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteSqlInjectionMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 243
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0244 - DeleteWebACL]
event_type = event
precheck = "DeleteWebACL"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteWebACL)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 244
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0245 - DeleteXssMatchSet]
event_type = event
precheck = "DeleteXssMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteXssMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 245
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0246 - UpdateByteMatchSet]
event_type = event
precheck = "UpdateByteMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateByteMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 246
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0247 - UpdateGeoMatchSet]
event_type = event
precheck = "UpdateGeoMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateGeoMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 247
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0248 - UpdateIPSet]
event_type = event
precheck = "UpdateIPSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateIPSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 248
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0249 - UpdateRateBasedRule]
event_type = event
precheck = "UpdateRateBasedRule"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateRateBasedRule)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 249
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0250 - UpdateRegexMatchSet]
event_type = event
precheck = "UpdateRegexMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateRegexMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 250
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0251 - UpdateRegexPatternSet]
event_type = event
precheck = "UpdateRegexPatternSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateRegexPatternSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 251
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0252 - UpdateRule]
event_type = event
precheck = "UpdateRule"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateRule)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 252
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0253 - UpdateSizeConstraintSet]
event_type = event
precheck = "UpdateSizeConstraintSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateSizeConstraintSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 253
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0254 - UpdateSqlInjectionMatchSet]
event_type = event
precheck = "UpdateSqlInjectionMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateSqlInjectionMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 254
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0255 - UpdateWebACL]
event_type = event
precheck = "UpdateWebACL"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateWebACL)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 255
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0256 - UpdateXssMatchSet]
event_type = event
precheck = "UpdateXssMatchSet"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateXssMatchSet)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 256
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0257 - AddClientIDToOpenIDConnectProvider]
event_type = event
precheck = "AddClientIDToOpenIDConnectProvider"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AddClientIDToOpenIDConnectProvider)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 257
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0258 - AddRoleToInstanceProfile]
event_type = event
precheck = "AddRoleToInstanceProfile"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AddRoleToInstanceProfile)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 258
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0259 - AddUserToGroup]
event_type = event
precheck = "AddUserToGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AddUserToGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 259
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0260 - AttachGroupPolicy]
event_type = event
precheck = "AttachGroupPolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AttachGroupPolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 260
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0261 - AttachRolePolicy]
event_type = event
precheck = "AttachRolePolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AttachRolePolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 261
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0262 - AttachUserPolicy]
event_type = event
precheck = "AttachUserPolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>AttachUserPolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 262
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0263 - ChangePassword]
event_type = event
precheck = "ChangePassword"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ChangePassword)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 263
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0264 - CreateAccessKey]
event_type = event
precheck = "CreateAccessKey"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateAccessKey)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 264
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0265 - CreateAccountAlias]
event_type = event
precheck = "CreateAccountAlias"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateAccountAlias)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 265
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0266 - CreateGroup]
event_type = event
precheck = "CreateGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 266
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0267 - CreateInstanceProfile]
event_type = event
precheck = "CreateInstanceProfile"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateInstanceProfile)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 267
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0268 - CreateLoginProfile]
event_type = event
precheck = "CreateLoginProfile"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateLoginProfile)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 268
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0269 - CreateOpenIDConnectProvider]
event_type = event
precheck = "CreateOpenIDConnectProvider"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateOpenIDConnectProvider)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 269
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0270 - CreatePolicy]
event_type = event
precheck = "CreatePolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreatePolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 270
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0271 - CreatePolicyVersion]
event_type = event
precheck = "CreatePolicyVersion"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreatePolicyVersion)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 271
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0272 - CreateRole]
event_type = event
precheck = "CreateRole"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateRole)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 272
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0273 - CreateSAMLProvider]
event_type = event
precheck = "CreateSAMLProvider"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateSAMLProvider)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 273
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0274 - CreateUser]
event_type = event
precheck = "CreateUser"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateUser)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 274
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0275 - CreateVirtualMFADevice]
event_type = event
precheck = "CreateVirtualMFADevice"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>CreateVirtualMFADevice)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 275
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0276 - DeactivateMFADevice]
event_type = event
precheck = "DeactivateMFADevice"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeactivateMFADevice)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 276
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0277 - DeleteAccessKey]
event_type = event
precheck = "DeleteAccessKey"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteAccessKey)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 277
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0278 - DeleteAccountAlias]
event_type = event
precheck = "DeleteAccountAlias"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteAccountAlias)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 278
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0279 - DeleteAccountPasswordPolicy]
event_type = event
precheck = "DeleteAccountPasswordPolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteAccountPasswordPolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 279
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0280 - DeleteGroup]
event_type = event
precheck = "DeleteGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 280
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0281 - DeleteGroupPolicy]
event_type = event
precheck = "DeleteGroupPolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteGroupPolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 281
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0282 - DeleteInstanceProfile]
event_type = event
precheck = "DeleteInstanceProfile"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteInstanceProfile)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 282
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0283 - DeleteLoginProfile]
event_type = event
precheck = "DeleteLoginProfile"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteLoginProfile)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 283
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0284 - DeleteOpenIDConnectProvider]
event_type = event
precheck = "DeleteOpenIDConnectProvider"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteOpenIDConnectProvider)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 284
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0285 - DeletePolicy]
event_type = event
precheck = "DeletePolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeletePolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 285
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0286 - DeletePolicyVersion]
event_type = event
precheck = "DeletePolicyVersion"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeletePolicyVersion)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 286
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0287 - DeleteRole]
event_type = event
precheck = "DeleteRole"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteRole)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 287
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0288 - DeleteRolePolicy]
event_type = event
precheck = "DeleteRolePolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteRolePolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 288
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0289 - DeleteSAMLProvider]
event_type = event
precheck = "DeleteSAMLProvider"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteSAMLProvider)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 289
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0290 - DeleteServerCertificate]
event_type = event
precheck = "DeleteServerCertificate"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteServerCertificate)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 290
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0291 - DeleteSigningCertificate]
event_type = event
precheck = "DeleteSigningCertificate"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteSigningCertificate)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 291
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0292 - DeleteSSHPublicKey]
event_type = event
precheck = "DeleteSSHPublicKey"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteSSHPublicKey)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 292
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0293 - DeleteUser]
event_type = event
precheck = "DeleteUser"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteUser)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 293
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0294 - DeleteUserPolicy]
event_type = event
precheck = "DeleteUserPolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteUserPolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 294
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0295 - DeleteVirtualMFADevice]
event_type = event
precheck = "DeleteVirtualMFADevice"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DeleteVirtualMFADevice)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 295
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0296 - DetachGroupPolicy]
event_type = event
precheck = "DetachGroupPolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DetachGroupPolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 296
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0297 - DetachRolePolicy]
event_type = event
precheck = "DetachRolePolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DetachRolePolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 297
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0298 - DetachUserPolicy]
event_type = event
precheck = "DetachUserPolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>DetachUserPolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 298
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0299 - EnableMFADevice]
event_type = event
precheck = "EnableMFADevice"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>EnableMFADevice)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 299
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0300 - PutGroupPolicy]
event_type = event
precheck = "PutGroupPolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutGroupPolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 300
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0301 - PutRolePolicy]
event_type = event
precheck = "PutRolePolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutRolePolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 301
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0302 - PutUserPolicy]
event_type = event
precheck = "PutUserPolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>PutUserPolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 302
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0303 - RemoveClientIDFromOpenIDConnectProvider]
event_type = event
precheck = "RemoveClientIDFromOpenIDConnectProvider"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RemoveClientIDFromOpenIDConnectProvider)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 303
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0304 - RemoveRoleFromInstanceProfile]
event_type = event
precheck = "RemoveRoleFromInstanceProfile"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RemoveRoleFromInstanceProfile)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 304
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0305 - RemoveUserFromGroup]
event_type = event
precheck = "RemoveUserFromGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>RemoveUserFromGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 305
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0306 - ResyncMFADevice]
event_type = event
precheck = "ResyncMFADevice"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ResyncMFADevice)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 306
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0307 - SetDefaultPolicyVersion]
event_type = event
precheck = "SetDefaultPolicyVersion"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>SetDefaultPolicyVersion)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 307
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0308 - UpdateAccessKey]
event_type = event
precheck = "UpdateAccessKey"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateAccessKey)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 308
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0309 - UpdateAccountPasswordPolicy]
event_type = event
precheck = "UpdateAccountPasswordPolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateAccountPasswordPolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 309
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0310 - UpdateAssumeRolePolicy]
event_type = event
precheck = "UpdateAssumeRolePolicy"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateAssumeRolePolicy)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 310
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0311 - UpdateGroup]
event_type = event
precheck = "UpdateGroup"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateGroup)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 311
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0312 - UpdateLoginProfile]
event_type = event
precheck = "UpdateLoginProfile"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateLoginProfile)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 312
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0313 - UpdateOpenIDConnectProviderThumbprint]
event_type = event
precheck = "UpdateOpenIDConnectProviderThumbprint"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateOpenIDConnectProviderThumbprint)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 313
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0314 - UpdateSAMLProvider]
event_type = event
precheck = "UpdateSAMLProvider"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateSAMLProvider)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 314
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0315 - UpdateServerCertificate]
event_type = event
precheck = "UpdateServerCertificate"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateServerCertificate)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 315
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0316 - UpdateSigningCertificate]
event_type = event
precheck = "UpdateSigningCertificate"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateSigningCertificate)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 316
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0317 - UpdateSSHPublicKey]
event_type = event
precheck = "UpdateSSHPublicKey"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateSSHPublicKey)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 317
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0318 - UpdateUser]
event_type = event
precheck = "UpdateUser"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UpdateUser)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 318
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0319 - UploadServerCertificate]
event_type = event
precheck = "UploadServerCertificate"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UploadServerCertificate)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 319
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0320 - UploadSigningCertificate]
event_type = event
precheck = "UploadSigningCertificate"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UploadSigningCertificate)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 320
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0321 - UploadSSHPublicKey]
event_type = event
precheck = "UploadSSHPublicKey"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser|Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>UploadSSHPublicKey)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 321
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0322 - ConsoleLogin]
event_type = event
precheck = "ConsoleLogin"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ConsoleLogin)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*ConsoleLogin":"(?P<response>Success)".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 322
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0323 - ConsoleLogin]
event_type = event
precheck = "ConsoleLogin"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ConsoleLogin)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*ConsoleLogin":"(?P<response>Failure)".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 323
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0324 - ConsoleLogin]
event_type = event
precheck = "ConsoleLogin"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ConsoleLogin)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*ConsoleLogin":"(?P<response>Success)".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 324
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0325 - ConsoleLogin]
event_type = event
precheck = "ConsoleLogin"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>ConsoleLogin)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*ConsoleLogin":"(?P<response>Failure)".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 325
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0326 - AssumedRole]
event_type = event
precheck = "AssumedRole"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>AssumedRole)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>.*)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 326
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[0327 - AWS Service]
event_type = event
precheck = "AWSService"
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>AWSService)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>.*)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 327
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[9998 - Root Generic]
event_type = event
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>Root)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>.*)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 10000
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}

[9999 - IAM generic]
event_type = event
regexp = "(?P<syslog_date>\S{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}).*type":"(?P<user_type>IAMUser)"(.*"userName":"(?P<user>[\w-]+)"})?.*eventTime":"(?P<event_time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z)","eventSource":"(?P<service>[a-z0-9.]+)","eventName":"(?P<event_name>.*)","awsRegion":"(?P<region>\S+)","sourceIPAddress":"(?P<source_ip>(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3})?|([a-z0-9.]+)?)",".*eventType":"(?P<event_type>\w+)"(.*"ip_city":"(?P<location>\w+)")?.*"
plugin_sid = 20000
date = {normalize_date($syslog_date)}
device = {resolve_ip($source_ip)}
username = {$user}
src_ip = {$source_ip}
dst_ip = NA
src_port = NA
dst_port = NA
protocol = NA
userdata1 = user type = {$user_type}
userdata2 = event time = {$event_time}
userdata3 = AWS service = {$service}
userdata4 = event name = {$event_name}
userdata5 = aws region = {$region}
userdata6 = event type = {$event_type}
userdata7 = ip location = {$location}
